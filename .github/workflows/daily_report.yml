name: Daily Arxiv Paper Report

on:
  schedule:
    # Run at 4:00 UTC (1:00 PM JST) Monday to Friday
    - cron: '0 4 * * 1-5'
  workflow_dispatch:  # Allow manual triggering

jobs:
  generate-report:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Generate daily report
      id: generate_report
      env:
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        EMAIL_SMTP_SERVER: ${{ secrets.EMAIL_SMTP_SERVER }}
        EMAIL_SMTP_PORT: ${{ secrets.EMAIL_SMTP_PORT }}
        EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}
      run: |
        python scripts/run_daily_report.py
        # Get the report filename and set it as an output
        REPORT_DATE=$(date +%Y-%m-%d)
        REPORT_FILE="reports/arxiv_ro_report_${REPORT_DATE}.md"
        echo "report_file=${REPORT_FILE}" >> $GITHUB_OUTPUT
        echo "report_date=${REPORT_DATE}" >> $GITHUB_OUTPUT
      
    - name: Upload report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: arxiv-report
        path: reports/
        retention-days: 30
    
    - name: Create GitHub Release
      if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
      # if: github.event_name == 'schedule' # Only for automated runs, not manual triggers
      uses: softprops/action-gh-release@v1
      with:
        name: "Arxiv RO Report ${{ steps.generate_report.outputs.report_date }}"
        tag_name: "report-${{ steps.generate_report.outputs.report_date }}"
        body_path: ${{ steps.generate_report.outputs.report_file }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
